import telebot
from datetime import datetime as dt
import logging
import operations as o
from operations import read_csv, tasks
from config import TOKEN
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
)
import config
from phonebook_bot import choice
bot = telebot.TeleBot(config.TOKEN)
# –í–∫–ª—é—á–∏–º –≤–µ–¥–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã —ç—Ç–∞–ø–æ–≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
START, MENU, EDIT, ADD, DELETE, VIEW, SEARCH, SEARCH_MENU, GET_TASK, GET_DATE = range(10)

TIME_NOW = dt.now().strftime('%D_%H:%M')
welcome = 'CAACAgIAAxkBAAEF_19jPG6mcNqRdZlLDNJGlGEFs7nTpwAC5QwAAqhUwUj8YN30wHUCyioE'
hello = 'CAACAgIAAxkBAAEF_5pjPIoFzmEpnniAQfzpzoP3-x2HJQACCw4AAui3qEiqv-bqgOxaUyoE'
view_sticker = 'CAACAgIAAxkBAAEF_5xjPIvHVPz5lxKQwOxKrSCSivpBzQAC5woAAk0PCEn6k9uNa2S47SoE'

# —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä


def start(update, _):
    reply_keyboard = [['üëÄ VIEW', 'üìù ADD','üîé SEARCH']]
    markup_key = ReplyKeyboardMarkup(
        reply_keyboard, resize_keyboard=True, one_time_keyboard=True)
    bot.send_sticker(update.message.chat.id, welcome)
    bot.send_message(update.effective_chat.id,
                     f'–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ –º–∞—Å—Ç–µ—Ä {update.effective_user.first_name}, —è –ê–ª—å—Ñ—Ä–µ–¥, –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫')
    update.message.reply_text(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ToDoList. –ß–µ–º –∑–∞–π–º—ë–º—Å—è? üßê\n–≤–≤–µ–¥–∏—Ç–µ ''/cancel'' –¥–ª—è –≤—ã—Ö–æ–¥–∞', reply_markup=markup_key)
    return MENU


def menu(update, _):
    choice = update.message.text
    if choice == 'üëÄ VIEW':
        return view(update, _)
    if choice == 'üìù ADD':
        update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É: ")
        return ADD
    if choice == 'üîé SEARCH':
        update.message.reply_text("–ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞: ")
        return SEARCH


def view(update, _):
    user = update.message.from_user
    logger.info("–ö–æ–Ω—Ç–∞–∫—Ç %s: %s", user.first_name, update.message.text)
    bot.send_sticker(update.message.chat.id, view_sticker)
    bot.send_message(update.effective_chat.id,
                     f'–î–∞–≤–∞–π—Ç–µ-–∫–∞ –≤–∑–≥–ª—è–Ω–µ–º –º–∞—Å—Ç–µ—Ä {update.effective_user.first_name}')
    tasks = read_csv()
    tasks_string = o.view_tasks(tasks)
    update.message.reply_text(tasks_string)
    return start(update, _)


def add(update, _):
    tasks = read_csv()
    task = {}
    user = update.message.from_user
    logger.info("Task %s: %s", user.first_name, update.message.text)
    name = update.message.text
    task['–ò–º—è'] = user.first_name
    task['–§–∞–º–∏–ª–∏—è'] = user.last_name
    task['–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞'] = TIME_NOW
    task['–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'] = '–ù–£–ñ–ù–û –°–î–ï–õ–ê–¢–¨'
    task['–ó–∞–¥–∞—á–∞'] = name
    tasks.append(task)
    o.write_csv(tasks)
    return start(update, _)


def search(update, _):
    tasks = o.read_csv()
    searchstring = update.message.text
    searched_tasks = o.search_task(searchstring, tasks)
    if len(searched_tasks) > 1:
        update.message.reply_text('–£–∫–∞–∂–∏—Ç–µ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å')
        return
    if len(searched_tasks) == 1:
        bot.send_message(update.effective_chat.id,
                     f'{update.effective_user.first_name}, –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É <{searchstring}> –Ω–∞–π–¥–µ–Ω–æ:')
        tasks_string = o.view_tasks(searched_tasks)
        update.message.reply_text(tasks_string)
        reply_keyboard = [['‚ùå DELETE', '‚úç EDIT']]
        markup_key = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True, one_time_keyboard=True)
        update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º: üßê\n–≤–≤–µ–¥–∏—Ç–µ ''/cancel'' –¥–ª—è –≤—ã—Ö–æ–¥–∞', reply_markup=markup_key)
        return SEARCH_MENU
    if len(searched_tasks) == 0:
        update.message.reply_text(f'{len(searched_tasks)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ')
        update.message.reply_text('–£–∫–∞–∂–∏—Ç–µ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å')
        return
    return start(update, _)


def search_menu(update, _):
    choice = update.message.text
    if choice == '‚ùå DELETE':
        return delete(update, _)
    if choice == '‚úç EDIT':
        return EDIT

def delete(update, _):
    tasks =read_csv()
    o.delete_task()
    o.write_csv(tasks)
    update.message.reply_text('–ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞')
    return start(update, _)


def edit(update, context):
    pass


def cancel(update, _):
    # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = update.message.from_user
    # –ü–∏—à–µ–º –≤ –∂—É—Ä–Ω–∞–ª –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—á–∏–≤—ã–π
    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –æ—Ç–º–µ–Ω–∏–ª —Ä–∞–∑–≥–æ–≤–æ—Ä.", user.first_name)
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –æ—Ç–∫–∞–∑ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å
    update.message.reply_text(
        '–ú–æ–µ –¥–µ–ª–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å - –í–∞—à–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è'
        ' –ë—É–¥–µ—Ç —Å–∫—É—á–Ω–æ - –ø–∏—à–∏.',
    )
    return ConversationHandler.END


if __name__ == '__main__':
    # –°–æ–∑–¥–∞–µ–º Updater –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞.
    updater = Updater(TOKEN)
    # –ø–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dispatcher = updater.dispatcher

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ `ConversationHandler`
    # —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ GENDER, PHOTO, LOCATION –∏ BIO
    game_conversation_handler = ConversationHandler(  # –∑–¥–µ—Å—å —Å—Ç—Ä–æ–∏—Ç—Å—è –ª–æ–≥–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        # —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä
        entry_points=[CommandHandler('start', start)],
        # —ç—Ç–∞–ø—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–∞, –∫–∞–∂–¥—ã–π —Å–æ —Å–≤–æ–∏–º —Å–ø–∏—Å–∫–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
        states={
            VIEW: [MessageHandler(Filters.text, view)],
            START: [CommandHandler('start', start)],
            ADD: [MessageHandler(Filters.text, add)],
            DELETE: [MessageHandler(Filters.text, delete)],
            SEARCH_MENU: [MessageHandler(Filters.text, search_menu)],
            SEARCH: [MessageHandler(Filters.text, search)],
            MENU: [MessageHandler(Filters.text, menu)],

        },
        # —Ç–æ—á–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ `conv_handler`
    dispatcher.add_handler(game_conversation_handler)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()
